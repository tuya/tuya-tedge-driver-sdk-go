// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: thingmodel.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

////////////////////////////////////////////////////////////////////////////////////////
// 物模型resource与driver sdk交互
type ThingModelOperationType int32

const (
	ThingModelOperationType_UNSPECIFIED                      ThingModelOperationType = 0
	ThingModelOperationType_MODEL_GET                        ThingModelOperationType = 1  // 设备上报向云端获取物模型查询请求
	ThingModelOperationType_MODEL_GET_RESPONSE               ThingModelOperationType = 2  // 云端响应设备上报向云端获取物模型查询请求
	ThingModelOperationType_PROPERTY_REPORT                  ThingModelOperationType = 3  // 设备上报向云端上报设备属性值
	ThingModelOperationType_PROPERTY_REPORT_RESPONSE         ThingModelOperationType = 4  // 云端响应设备上报向云端上报设备属性值
	ThingModelOperationType_PROPERTY_SET                     ThingModelOperationType = 5  // 云端下发属性设置
	ThingModelOperationType_PROPERTY_SET_RESPONSE            ThingModelOperationType = 6  // 设备响应云端下发属性设置
	ThingModelOperationType_PROPERTY_GET                     ThingModelOperationType = 7  // 云端下发属性查询请求
	ThingModelOperationType_PROPERTY_GET_RESPONSE            ThingModelOperationType = 8  // 设备响应云端下发属性查询请求
	ThingModelOperationType_ACTION_EXECUTE                   ThingModelOperationType = 9  // 云端下发设备动作执行消息
	ThingModelOperationType_ACTION_EXECUTE_RESPONSE          ThingModelOperationType = 10 // 设备响应云端下发设备动作执行消息
	ThingModelOperationType_EVENT_TRIGGER                    ThingModelOperationType = 11 // 设备上报事件触发消息
	ThingModelOperationType_EVENT_TRIGGER_RESPONSE           ThingModelOperationType = 12 // 云端响应设备上报事件触发消息
	ThingModelOperationType_DATA_BATCH_REPORT                ThingModelOperationType = 13 // 设备上报 批量上报属性或事件数据
	ThingModelOperationType_DATA_BATCH_REPORT_RESPONSE       ThingModelOperationType = 14 // 云端响应设备上报 批量上报属性或事件数据
	ThingModelOperationType_PROPERTY_DESIRED_GET             ThingModelOperationType = 15 // 设备上报向云端获取属性期望值请求
	ThingModelOperationType_PROPERTY_DESIRED_GET_RESPONSE    ThingModelOperationType = 16 // 云端响应设备上报向云端获取属性期望值请求
	ThingModelOperationType_PROPERTY_DESIRED_DELETE          ThingModelOperationType = 17 // 设备上报向云端发送清除属性期望值请求
	ThingModelOperationType_PROPERTY_DESIRED_DELETE_RESPONSE ThingModelOperationType = 18 // 云端响应设备上报向云端发送清除属性期望值请求
)

// Enum value maps for ThingModelOperationType.
var (
	ThingModelOperationType_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "MODEL_GET",
		2:  "MODEL_GET_RESPONSE",
		3:  "PROPERTY_REPORT",
		4:  "PROPERTY_REPORT_RESPONSE",
		5:  "PROPERTY_SET",
		6:  "PROPERTY_SET_RESPONSE",
		7:  "PROPERTY_GET",
		8:  "PROPERTY_GET_RESPONSE",
		9:  "ACTION_EXECUTE",
		10: "ACTION_EXECUTE_RESPONSE",
		11: "EVENT_TRIGGER",
		12: "EVENT_TRIGGER_RESPONSE",
		13: "DATA_BATCH_REPORT",
		14: "DATA_BATCH_REPORT_RESPONSE",
		15: "PROPERTY_DESIRED_GET",
		16: "PROPERTY_DESIRED_GET_RESPONSE",
		17: "PROPERTY_DESIRED_DELETE",
		18: "PROPERTY_DESIRED_DELETE_RESPONSE",
	}
	ThingModelOperationType_value = map[string]int32{
		"UNSPECIFIED":                      0,
		"MODEL_GET":                        1,
		"MODEL_GET_RESPONSE":               2,
		"PROPERTY_REPORT":                  3,
		"PROPERTY_REPORT_RESPONSE":         4,
		"PROPERTY_SET":                     5,
		"PROPERTY_SET_RESPONSE":            6,
		"PROPERTY_GET":                     7,
		"PROPERTY_GET_RESPONSE":            8,
		"ACTION_EXECUTE":                   9,
		"ACTION_EXECUTE_RESPONSE":          10,
		"EVENT_TRIGGER":                    11,
		"EVENT_TRIGGER_RESPONSE":           12,
		"DATA_BATCH_REPORT":                13,
		"DATA_BATCH_REPORT_RESPONSE":       14,
		"PROPERTY_DESIRED_GET":             15,
		"PROPERTY_DESIRED_GET_RESPONSE":    16,
		"PROPERTY_DESIRED_DELETE":          17,
		"PROPERTY_DESIRED_DELETE_RESPONSE": 18,
	}
)

func (x ThingModelOperationType) Enum() *ThingModelOperationType {
	p := new(ThingModelOperationType)
	*p = x
	return p
}

func (x ThingModelOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThingModelOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_thingmodel_proto_enumTypes[0].Descriptor()
}

func (ThingModelOperationType) Type() protoreflect.EnumType {
	return &file_thingmodel_proto_enumTypes[0]
}

func (x ThingModelOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThingModelOperationType.Descriptor instead.
func (ThingModelOperationType) EnumDescriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{0}
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId  string            `protobuf:"bytes,1,opt,name=ability_id,json=abilityId,proto3" json:"ability_id,omitempty"`
	ProductId  string            `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Code       string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name       string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	AccessMode string            `protobuf:"bytes,5,opt,name=access_mode,json=accessMode,proto3" json:"access_mode,omitempty"`
	TypeSpec   *TypeSpec         `protobuf:"bytes,6,opt,name=type_spec,json=typeSpec,proto3" json:"type_spec,omitempty"`
	Attributes map[string]string `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{0}
}

func (x *Property) GetAbilityId() string {
	if x != nil {
		return x.AbilityId
	}
	return ""
}

func (x *Property) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Property) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetAccessMode() string {
	if x != nil {
		return x.AccessMode
	}
	return ""
}

func (x *Property) GetTypeSpec() *TypeSpec {
	if x != nil {
		return x.TypeSpec
	}
	return nil
}

func (x *Property) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type TypeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Min             int64                `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max             int64                `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Step            int64                `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	Unit            string               `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	Scale           int64                `protobuf:"varint,6,opt,name=scale,proto3" json:"scale,omitempty"`
	MaxLen          int64                `protobuf:"varint,7,opt,name=max_len,json=maxLen,proto3" json:"max_len,omitempty"`
	Range           []string             `protobuf:"bytes,8,rep,name=range,proto3" json:"range,omitempty"`
	Label           []string             `protobuf:"bytes,9,rep,name=label,proto3" json:"label,omitempty"`
	DefaultValue    string               `protobuf:"bytes,10,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MaxSize         int64                `protobuf:"varint,11,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	Properties      map[string]*Property `protobuf:"bytes,12,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ElementTypeSpec *TypeSpec            `protobuf:"bytes,13,opt,name=element_type_spec,json=elementTypeSpec,proto3" json:"element_type_spec,omitempty"`
}

func (x *TypeSpec) Reset() {
	*x = TypeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeSpec) ProtoMessage() {}

func (x *TypeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeSpec.ProtoReflect.Descriptor instead.
func (*TypeSpec) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{1}
}

func (x *TypeSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TypeSpec) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *TypeSpec) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *TypeSpec) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *TypeSpec) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *TypeSpec) GetScale() int64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *TypeSpec) GetMaxLen() int64 {
	if x != nil {
		return x.MaxLen
	}
	return 0
}

func (x *TypeSpec) GetRange() []string {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *TypeSpec) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *TypeSpec) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *TypeSpec) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *TypeSpec) GetProperties() map[string]*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TypeSpec) GetElementTypeSpec() *TypeSpec {
	if x != nil {
		return x.ElementTypeSpec
	}
	return nil
}

type TMEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId    string            `protobuf:"bytes,1,opt,name=ability_id,json=abilityId,proto3" json:"ability_id,omitempty"`
	ProductId    string            `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Code         string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name         string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description  string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	OutputParams []*InputOutput    `protobuf:"bytes,6,rep,name=output_params,json=outputParams,proto3" json:"output_params,omitempty"`
	Attributes   map[string]string `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TMEvent) Reset() {
	*x = TMEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMEvent) ProtoMessage() {}

func (x *TMEvent) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMEvent.ProtoReflect.Descriptor instead.
func (*TMEvent) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{2}
}

func (x *TMEvent) GetAbilityId() string {
	if x != nil {
		return x.AbilityId
	}
	return ""
}

func (x *TMEvent) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *TMEvent) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TMEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TMEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TMEvent) GetOutputParams() []*InputOutput {
	if x != nil {
		return x.OutputParams
	}
	return nil
}

func (x *TMEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type InputOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TypeSpec *TypeSpec `protobuf:"bytes,3,opt,name=type_spec,json=typeSpec,proto3" json:"type_spec,omitempty"`
}

func (x *InputOutput) Reset() {
	*x = InputOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputOutput) ProtoMessage() {}

func (x *InputOutput) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputOutput.ProtoReflect.Descriptor instead.
func (*InputOutput) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{3}
}

func (x *InputOutput) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InputOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputOutput) GetTypeSpec() *TypeSpec {
	if x != nil {
		return x.TypeSpec
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId    string            `protobuf:"bytes,1,opt,name=ability_id,json=abilityId,proto3" json:"ability_id,omitempty"`
	ProductId    string            `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Code         string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name         string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description  string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	InputParams  []*InputOutput    `protobuf:"bytes,6,rep,name=input_params,json=inputParams,proto3" json:"input_params,omitempty"`
	OutputParams []*InputOutput    `protobuf:"bytes,7,rep,name=output_params,json=outputParams,proto3" json:"output_params,omitempty"`
	Attributes   map[string]string `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{4}
}

func (x *Action) GetAbilityId() string {
	if x != nil {
		return x.AbilityId
	}
	return ""
}

func (x *Action) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Action) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Action) GetInputParams() []*InputOutput {
	if x != nil {
		return x.InputParams
	}
	return nil
}

func (x *Action) GetOutputParams() []*InputOutput {
	if x != nil {
		return x.OutputParams
	}
	return nil
}

func (x *Action) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ThingModelProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Model           string      `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Action          []*Action   `protobuf:"bytes,6,rep,name=action,proto3" json:"action,omitempty"`
	Event           []*TMEvent  `protobuf:"bytes,7,rep,name=event,proto3" json:"event,omitempty"`
	Property        []*Property `protobuf:"bytes,8,rep,name=property,proto3" json:"property,omitempty"`
	DeviceLibraryId string      `protobuf:"bytes,9,opt,name=device_library_id,json=deviceLibraryId,proto3" json:"device_library_id,omitempty"`
}

func (x *ThingModelProduct) Reset() {
	*x = ThingModelProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThingModelProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThingModelProduct) ProtoMessage() {}

func (x *ThingModelProduct) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThingModelProduct.ProtoReflect.Descriptor instead.
func (*ThingModelProduct) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{5}
}

func (x *ThingModelProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThingModelProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThingModelProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ThingModelProduct) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ThingModelProduct) GetAction() []*Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ThingModelProduct) GetEvent() []*TMEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ThingModelProduct) GetProperty() []*Property {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *ThingModelProduct) GetDeviceLibraryId() string {
	if x != nil {
		return x.DeviceLibraryId
	}
	return ""
}

type TMProductByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TMProductByIdRequest) Reset() {
	*x = TMProductByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMProductByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMProductByIdRequest) ProtoMessage() {}

func (x *TMProductByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMProductByIdRequest.ProtoReflect.Descriptor instead.
func (*TMProductByIdRequest) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{6}
}

func (x *TMProductByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TMProductSearchQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseSearchConditionQuery *BaseSearchConditionQuery `protobuf:"bytes,1,opt,name=base_search_condition_query,json=baseSearchConditionQuery,proto3" json:"base_search_condition_query,omitempty"`
	DeviceLibraryId          string                    `protobuf:"bytes,2,opt,name=device_library_id,json=deviceLibraryId,proto3" json:"device_library_id,omitempty"`
}

func (x *TMProductSearchQueryRequest) Reset() {
	*x = TMProductSearchQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMProductSearchQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMProductSearchQueryRequest) ProtoMessage() {}

func (x *TMProductSearchQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMProductSearchQueryRequest.ProtoReflect.Descriptor instead.
func (*TMProductSearchQueryRequest) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{7}
}

func (x *TMProductSearchQueryRequest) GetBaseSearchConditionQuery() *BaseSearchConditionQuery {
	if x != nil {
		return x.BaseSearchConditionQuery
	}
	return nil
}

func (x *TMProductSearchQueryRequest) GetDeviceLibraryId() string {
	if x != nil {
		return x.DeviceLibraryId
	}
	return ""
}

type TMMultiProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Products []*ThingModelProduct `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *TMMultiProductsResponse) Reset() {
	*x = TMMultiProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMMultiProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMMultiProductsResponse) ProtoMessage() {}

func (x *TMMultiProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMMultiProductsResponse.ProtoReflect.Descriptor instead.
func (*TMMultiProductsResponse) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{8}
}

func (x *TMMultiProductsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TMMultiProductsResponse) GetProducts() []*ThingModelProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

// 物模型
type ThingModelMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string                  `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"` // 下发的目标设备id
	OpType ThingModelOperationType `protobuf:"varint,2,opt,name=op_type,json=opType,proto3,enum=thingmodel.ThingModelOperationType" json:"op_type,omitempty"`
	Data   string                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ThingModelMsg) Reset() {
	*x = ThingModelMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThingModelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThingModelMsg) ProtoMessage() {}

func (x *ThingModelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThingModelMsg.ProtoReflect.Descriptor instead.
func (*ThingModelMsg) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{9}
}

func (x *ThingModelMsg) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ThingModelMsg) GetOpType() ThingModelOperationType {
	if x != nil {
		return x.OpType
	}
	return ThingModelOperationType_UNSPECIFIED
}

func (x *ThingModelMsg) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

////////////////////////////////////////////////////////////////////////////////////////
// Atop Http Request
type HttpRequestParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpUrl string `protobuf:"bytes,1,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`
	HttpApi string `protobuf:"bytes,2,opt,name=http_api,json=httpApi,proto3" json:"http_api,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *HttpRequestParam) Reset() {
	*x = HttpRequestParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpRequestParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequestParam) ProtoMessage() {}

func (x *HttpRequestParam) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequestParam.ProtoReflect.Descriptor instead.
func (*HttpRequestParam) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{10}
}

func (x *HttpRequestParam) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *HttpRequestParam) GetHttpApi() string {
	if x != nil {
		return x.HttpApi
	}
	return ""
}

func (x *HttpRequestParam) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HttpRequestParam) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// 数据上报返回
type HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thingmodel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_thingmodel_proto_rawDescGZIP(), []int{11}
}

func (x *HttpResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_thingmodel_proto protoreflect.FileDescriptor

var file_thingmodel_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x02, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x44, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x03, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4c, 0x65,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x0f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x53, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd3, 0x02, 0x0a, 0x07, 0x54,
	0x4d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x4d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x68, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x8d, 0x03, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa4, 0x02, 0x0a, 0x11, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x4d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x22, 0x26, 0x0a, 0x14, 0x54, 0x4d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x1b, 0x54, 0x4d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1b, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x18, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x54, 0x4d, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x22, 0x73, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x10, 0x48, 0x74, 0x74, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61,
	0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x41, 0x70,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x28, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a,
	0xf5, 0x03, 0x0a, 0x17, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52,
	0x54, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x47, 0x45, 0x54, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x08,
	0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x45, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47,
	0x45, 0x52, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x52,
	0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0c,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0d, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45,
	0x52, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x10,
	0x0f, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45,
	0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x10, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x11, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45,
	0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x12, 0x32, 0xc3, 0x01, 0x0a, 0x0d, 0x52, 0x70, 0x63, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x50, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x4d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x27, 0x2e,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x4d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x54, 0x4d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb6, 0x01,
	0x0a, 0x15, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f, 0x77, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x19, 0x2e,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x17, 0x54, 0x4d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x2e,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xaf, 0x01, 0x0a, 0x13, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a,
	0x0a, 0x13, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x73, 0x67,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1c,
	0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x18, 0x2e, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thingmodel_proto_rawDescOnce sync.Once
	file_thingmodel_proto_rawDescData = file_thingmodel_proto_rawDesc
)

func file_thingmodel_proto_rawDescGZIP() []byte {
	file_thingmodel_proto_rawDescOnce.Do(func() {
		file_thingmodel_proto_rawDescData = protoimpl.X.CompressGZIP(file_thingmodel_proto_rawDescData)
	})
	return file_thingmodel_proto_rawDescData
}

var file_thingmodel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_thingmodel_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_thingmodel_proto_goTypes = []interface{}{
	(ThingModelOperationType)(0),        // 0: thingmodel.ThingModelOperationType
	(*Property)(nil),                    // 1: thingmodel.Property
	(*TypeSpec)(nil),                    // 2: thingmodel.TypeSpec
	(*TMEvent)(nil),                     // 3: thingmodel.TMEvent
	(*InputOutput)(nil),                 // 4: thingmodel.InputOutput
	(*Action)(nil),                      // 5: thingmodel.Action
	(*ThingModelProduct)(nil),           // 6: thingmodel.ThingModelProduct
	(*TMProductByIdRequest)(nil),        // 7: thingmodel.TMProductByIdRequest
	(*TMProductSearchQueryRequest)(nil), // 8: thingmodel.TMProductSearchQueryRequest
	(*TMMultiProductsResponse)(nil),     // 9: thingmodel.TMMultiProductsResponse
	(*ThingModelMsg)(nil),               // 10: thingmodel.ThingModelMsg
	(*HttpRequestParam)(nil),            // 11: thingmodel.HttpRequestParam
	(*HttpResponse)(nil),                // 12: thingmodel.HttpResponse
	nil,                                 // 13: thingmodel.Property.AttributesEntry
	nil,                                 // 14: thingmodel.TypeSpec.PropertiesEntry
	nil,                                 // 15: thingmodel.TMEvent.AttributesEntry
	nil,                                 // 16: thingmodel.Action.AttributesEntry
	(*BaseSearchConditionQuery)(nil),    // 17: common.BaseSearchConditionQuery
	(*emptypb.Empty)(nil),               // 18: google.protobuf.Empty
}
var file_thingmodel_proto_depIdxs = []int32{
	2,  // 0: thingmodel.Property.type_spec:type_name -> thingmodel.TypeSpec
	13, // 1: thingmodel.Property.attributes:type_name -> thingmodel.Property.AttributesEntry
	14, // 2: thingmodel.TypeSpec.properties:type_name -> thingmodel.TypeSpec.PropertiesEntry
	2,  // 3: thingmodel.TypeSpec.element_type_spec:type_name -> thingmodel.TypeSpec
	4,  // 4: thingmodel.TMEvent.output_params:type_name -> thingmodel.InputOutput
	15, // 5: thingmodel.TMEvent.attributes:type_name -> thingmodel.TMEvent.AttributesEntry
	2,  // 6: thingmodel.InputOutput.type_spec:type_name -> thingmodel.TypeSpec
	4,  // 7: thingmodel.Action.input_params:type_name -> thingmodel.InputOutput
	4,  // 8: thingmodel.Action.output_params:type_name -> thingmodel.InputOutput
	16, // 9: thingmodel.Action.attributes:type_name -> thingmodel.Action.AttributesEntry
	5,  // 10: thingmodel.ThingModelProduct.action:type_name -> thingmodel.Action
	3,  // 11: thingmodel.ThingModelProduct.event:type_name -> thingmodel.TMEvent
	1,  // 12: thingmodel.ThingModelProduct.property:type_name -> thingmodel.Property
	17, // 13: thingmodel.TMProductSearchQueryRequest.base_search_condition_query:type_name -> common.BaseSearchConditionQuery
	6,  // 14: thingmodel.TMMultiProductsResponse.products:type_name -> thingmodel.ThingModelProduct
	0,  // 15: thingmodel.ThingModelMsg.op_type:type_name -> thingmodel.ThingModelOperationType
	1,  // 16: thingmodel.TypeSpec.PropertiesEntry.value:type_name -> thingmodel.Property
	7,  // 17: thingmodel.RpcThingModel.ProductById:input_type -> thingmodel.TMProductByIdRequest
	8,  // 18: thingmodel.RpcThingModel.ProductsSearch:input_type -> thingmodel.TMProductSearchQueryRequest
	10, // 19: thingmodel.ThingModelDownService.ThingModelMsgIssue:input_type -> thingmodel.ThingModelMsg
	6,  // 20: thingmodel.ThingModelDownService.TMUpdateProductCallback:input_type -> thingmodel.ThingModelProduct
	10, // 21: thingmodel.ThingModelUpService.ThingModelMsgReport:input_type -> thingmodel.ThingModelMsg
	11, // 22: thingmodel.ThingModelUpService.HttpRequestProxy:input_type -> thingmodel.HttpRequestParam
	6,  // 23: thingmodel.RpcThingModel.ProductById:output_type -> thingmodel.ThingModelProduct
	9,  // 24: thingmodel.RpcThingModel.ProductsSearch:output_type -> thingmodel.TMMultiProductsResponse
	18, // 25: thingmodel.ThingModelDownService.ThingModelMsgIssue:output_type -> google.protobuf.Empty
	18, // 26: thingmodel.ThingModelDownService.TMUpdateProductCallback:output_type -> google.protobuf.Empty
	18, // 27: thingmodel.ThingModelUpService.ThingModelMsgReport:output_type -> google.protobuf.Empty
	12, // 28: thingmodel.ThingModelUpService.HttpRequestProxy:output_type -> thingmodel.HttpResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_thingmodel_proto_init() }
func file_thingmodel_proto_init() {
	if File_thingmodel_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_thingmodel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThingModelProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMProductByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMProductSearchQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMMultiProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThingModelMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpRequestParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thingmodel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thingmodel_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_thingmodel_proto_goTypes,
		DependencyIndexes: file_thingmodel_proto_depIdxs,
		EnumInfos:         file_thingmodel_proto_enumTypes,
		MessageInfos:      file_thingmodel_proto_msgTypes,
	}.Build()
	File_thingmodel_proto = out.File
	file_thingmodel_proto_rawDesc = nil
	file_thingmodel_proto_goTypes = nil
	file_thingmodel_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RpcThingModelClient is the client API for RpcThingModel service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcThingModelClient interface {
	ProductById(ctx context.Context, in *TMProductByIdRequest, opts ...grpc.CallOption) (*ThingModelProduct, error)
	ProductsSearch(ctx context.Context, in *TMProductSearchQueryRequest, opts ...grpc.CallOption) (*TMMultiProductsResponse, error)
}

type rpcThingModelClient struct {
	cc grpc.ClientConnInterface
}

func NewRpcThingModelClient(cc grpc.ClientConnInterface) RpcThingModelClient {
	return &rpcThingModelClient{cc}
}

func (c *rpcThingModelClient) ProductById(ctx context.Context, in *TMProductByIdRequest, opts ...grpc.CallOption) (*ThingModelProduct, error) {
	out := new(ThingModelProduct)
	err := c.cc.Invoke(ctx, "/thingmodel.RpcThingModel/ProductById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcThingModelClient) ProductsSearch(ctx context.Context, in *TMProductSearchQueryRequest, opts ...grpc.CallOption) (*TMMultiProductsResponse, error) {
	out := new(TMMultiProductsResponse)
	err := c.cc.Invoke(ctx, "/thingmodel.RpcThingModel/ProductsSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcThingModelServer is the server API for RpcThingModel service.
type RpcThingModelServer interface {
	ProductById(context.Context, *TMProductByIdRequest) (*ThingModelProduct, error)
	ProductsSearch(context.Context, *TMProductSearchQueryRequest) (*TMMultiProductsResponse, error)
}

// UnimplementedRpcThingModelServer can be embedded to have forward compatible implementations.
type UnimplementedRpcThingModelServer struct {
}

func (*UnimplementedRpcThingModelServer) ProductById(context.Context, *TMProductByIdRequest) (*ThingModelProduct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductById not implemented")
}
func (*UnimplementedRpcThingModelServer) ProductsSearch(context.Context, *TMProductSearchQueryRequest) (*TMMultiProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductsSearch not implemented")
}

func RegisterRpcThingModelServer(s *grpc.Server, srv RpcThingModelServer) {
	s.RegisterService(&_RpcThingModel_serviceDesc, srv)
}

func _RpcThingModel_ProductById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TMProductByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcThingModelServer).ProductById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.RpcThingModel/ProductById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcThingModelServer).ProductById(ctx, req.(*TMProductByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcThingModel_ProductsSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TMProductSearchQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcThingModelServer).ProductsSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.RpcThingModel/ProductsSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcThingModelServer).ProductsSearch(ctx, req.(*TMProductSearchQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcThingModel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thingmodel.RpcThingModel",
	HandlerType: (*RpcThingModelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProductById",
			Handler:    _RpcThingModel_ProductById_Handler,
		},
		{
			MethodName: "ProductsSearch",
			Handler:    _RpcThingModel_ProductsSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thingmodel.proto",
}

// ThingModelDownServiceClient is the client API for ThingModelDownService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThingModelDownServiceClient interface {
	ThingModelMsgIssue(ctx context.Context, in *ThingModelMsg, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TMUpdateProductCallback(ctx context.Context, in *ThingModelProduct, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type thingModelDownServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewThingModelDownServiceClient(cc grpc.ClientConnInterface) ThingModelDownServiceClient {
	return &thingModelDownServiceClient{cc}
}

func (c *thingModelDownServiceClient) ThingModelMsgIssue(ctx context.Context, in *ThingModelMsg, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/thingmodel.ThingModelDownService/ThingModelMsgIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingModelDownServiceClient) TMUpdateProductCallback(ctx context.Context, in *ThingModelProduct, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/thingmodel.ThingModelDownService/TMUpdateProductCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThingModelDownServiceServer is the server API for ThingModelDownService service.
type ThingModelDownServiceServer interface {
	ThingModelMsgIssue(context.Context, *ThingModelMsg) (*emptypb.Empty, error)
	TMUpdateProductCallback(context.Context, *ThingModelProduct) (*emptypb.Empty, error)
}

// UnimplementedThingModelDownServiceServer can be embedded to have forward compatible implementations.
type UnimplementedThingModelDownServiceServer struct {
}

func (*UnimplementedThingModelDownServiceServer) ThingModelMsgIssue(context.Context, *ThingModelMsg) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThingModelMsgIssue not implemented")
}
func (*UnimplementedThingModelDownServiceServer) TMUpdateProductCallback(context.Context, *ThingModelProduct) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TMUpdateProductCallback not implemented")
}

func RegisterThingModelDownServiceServer(s *grpc.Server, srv ThingModelDownServiceServer) {
	s.RegisterService(&_ThingModelDownService_serviceDesc, srv)
}

func _ThingModelDownService_ThingModelMsgIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingModelMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingModelDownServiceServer).ThingModelMsgIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.ThingModelDownService/ThingModelMsgIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingModelDownServiceServer).ThingModelMsgIssue(ctx, req.(*ThingModelMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThingModelDownService_TMUpdateProductCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingModelProduct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingModelDownServiceServer).TMUpdateProductCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.ThingModelDownService/TMUpdateProductCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingModelDownServiceServer).TMUpdateProductCallback(ctx, req.(*ThingModelProduct))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThingModelDownService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thingmodel.ThingModelDownService",
	HandlerType: (*ThingModelDownServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ThingModelMsgIssue",
			Handler:    _ThingModelDownService_ThingModelMsgIssue_Handler,
		},
		{
			MethodName: "TMUpdateProductCallback",
			Handler:    _ThingModelDownService_TMUpdateProductCallback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thingmodel.proto",
}

// ThingModelUpServiceClient is the client API for ThingModelUpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThingModelUpServiceClient interface {
	ThingModelMsgReport(ctx context.Context, in *ThingModelMsg, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//d.json
	HttpRequestProxy(ctx context.Context, in *HttpRequestParam, opts ...grpc.CallOption) (*HttpResponse, error)
}

type thingModelUpServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewThingModelUpServiceClient(cc grpc.ClientConnInterface) ThingModelUpServiceClient {
	return &thingModelUpServiceClient{cc}
}

func (c *thingModelUpServiceClient) ThingModelMsgReport(ctx context.Context, in *ThingModelMsg, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/thingmodel.ThingModelUpService/ThingModelMsgReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingModelUpServiceClient) HttpRequestProxy(ctx context.Context, in *HttpRequestParam, opts ...grpc.CallOption) (*HttpResponse, error) {
	out := new(HttpResponse)
	err := c.cc.Invoke(ctx, "/thingmodel.ThingModelUpService/HttpRequestProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThingModelUpServiceServer is the server API for ThingModelUpService service.
type ThingModelUpServiceServer interface {
	ThingModelMsgReport(context.Context, *ThingModelMsg) (*emptypb.Empty, error)
	//d.json
	HttpRequestProxy(context.Context, *HttpRequestParam) (*HttpResponse, error)
}

// UnimplementedThingModelUpServiceServer can be embedded to have forward compatible implementations.
type UnimplementedThingModelUpServiceServer struct {
}

func (*UnimplementedThingModelUpServiceServer) ThingModelMsgReport(context.Context, *ThingModelMsg) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThingModelMsgReport not implemented")
}
func (*UnimplementedThingModelUpServiceServer) HttpRequestProxy(context.Context, *HttpRequestParam) (*HttpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HttpRequestProxy not implemented")
}

func RegisterThingModelUpServiceServer(s *grpc.Server, srv ThingModelUpServiceServer) {
	s.RegisterService(&_ThingModelUpService_serviceDesc, srv)
}

func _ThingModelUpService_ThingModelMsgReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingModelMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingModelUpServiceServer).ThingModelMsgReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.ThingModelUpService/ThingModelMsgReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingModelUpServiceServer).ThingModelMsgReport(ctx, req.(*ThingModelMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThingModelUpService_HttpRequestProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HttpRequestParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingModelUpServiceServer).HttpRequestProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thingmodel.ThingModelUpService/HttpRequestProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingModelUpServiceServer).HttpRequestProxy(ctx, req.(*HttpRequestParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThingModelUpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thingmodel.ThingModelUpService",
	HandlerType: (*ThingModelUpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ThingModelMsgReport",
			Handler:    _ThingModelUpService_ThingModelMsgReport_Handler,
		},
		{
			MethodName: "HttpRequestProxy",
			Handler:    _ThingModelUpService_HttpRequestProxy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thingmodel.proto",
}
